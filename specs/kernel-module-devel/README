WHAT TO DO
----------
- create a directory with release-extraversion
  e.g. 2.6.5-1.358
- cd to it
- mkdir rpms
- download the four kernel rpms to rpms/
- kmd.py -u 2.6.5-1.358 rpms/*.rpm
- wait a long time
- tar cjf kernel-module-devel-2.6.5-1.358.tar.bz2 \
    kernel-module-devel-2.6.5-1.358

ALGORITHM
---------
* unpack all x kernel rpms
* get x lists of all files and directories ("paths") under build 
  that are in any of the unpacked rpms
  --> dict A of x sets
* get a list of all paths that appear in all the rpms (even though
  the content could be different)
  --> set B
* get a list of all files that are different in any
  of the four (using diff -Naur from the first to each of the others)
  --> set C
* copy set B to set D, the files that are supposed to be symlinked
* for each of the files from set C, that are different:
  - each file that is different makes it impossible to symlink it from
    the common set -> remove file from D
  - each file makes it impossible to symlink any of its parent directories
    -> remove all parents from D
* for each of the paths in set D, all children of that path still left in
  D can now be removed from set D too, since the children will be in
  the symlinked parent dir
* symlink all paths still in set D to each of the separate target dirs

* for each set in dict A:
  copy all the files that from this set that are in set C to the target dir
