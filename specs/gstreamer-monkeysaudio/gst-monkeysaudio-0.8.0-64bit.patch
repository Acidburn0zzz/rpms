diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEDecompress.cpp gst-monkeysaudio-0.8.0/libmonkeysaudio/APEDecompress.cpp
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEDecompress.cpp	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/APEDecompress.cpp	2005-05-04 15:23:36.329639464 +0200
@@ -21,7 +21,7 @@ CAPEDecompress::CAPEDecompress(int * pEr
     }
 
     // get format information
-    GetInfo(APE_INFO_WAVEFORMATEX, (int) &m_wfeInput);
+    GetInfo(APE_INFO_WAVEFORMATEX, (long) &m_wfeInput);
     m_nBlockAlign = GetInfo(APE_INFO_BLOCK_ALIGN);
 
     // initialize other stuff
@@ -335,7 +335,7 @@ int CAPEDecompress::SeekToFrame(int nFra
 /*****************************************************************************************
 Get information from the decompressor
 *****************************************************************************************/
-int CAPEDecompress::GetInfo(APE_DECOMPRESS_FIELDS Field, int nParam1, int nParam2)
+int CAPEDecompress::GetInfo(APE_DECOMPRESS_FIELDS Field, long nParam1, long nParam2)
 {
     int nRetVal = 0;
     BOOL bHandled = TRUE;
@@ -420,7 +420,7 @@ int CAPEDecompress::GetInfo(APE_DECOMPRE
             }
             else
             {
-                WAVEFORMATEX wfeFormat; GetInfo(APE_INFO_WAVEFORMATEX, (int) &wfeFormat, 0);
+                WAVEFORMATEX wfeFormat; GetInfo(APE_INFO_WAVEFORMATEX, (long) &wfeFormat, 0);
                 WAVE_HEADER WAVHeader; FillWaveHeader(&WAVHeader,
                     (m_nFinishBlock - m_nStartBlock) * GetInfo(APE_INFO_BLOCK_ALIGN),
                     &wfeFormat, 0);
diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEDecompress.h gst-monkeysaudio-0.8.0/libmonkeysaudio/APEDecompress.h
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEDecompress.h	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/APEDecompress.h	2005-05-04 15:23:36.330639312 +0200
@@ -20,7 +20,7 @@ public:
     int GetData(char * pBuffer, int nBlocks, int * pBlocksRetrieved);
     int Seek(int nBlockOffset);
 
-    int GetInfo(APE_DECOMPRESS_FIELDS Field, int nParam1 = 0, int nParam2 = 0);
+    int GetInfo(APE_DECOMPRESS_FIELDS Field, long nParam1 = 0, long nParam2 = 0);
 
 protected:
 
diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEInfo.cpp gst-monkeysaudio-0.8.0/libmonkeysaudio/APEInfo.cpp
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEInfo.cpp	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/APEInfo.cpp	2005-05-04 15:29:59.506387744 +0200
@@ -283,7 +283,7 @@ int CAPEInfo::SkipToAPEHeader()
     return 0;
 }
 
-int CAPEInfo::GetInfo(APE_DECOMPRESS_FIELDS Field, int nParam1, int nParam2)
+int CAPEInfo::GetInfo(APE_DECOMPRESS_FIELDS Field, long nParam1, long nParam2)
 {
     int nRetVal = -1;
 
@@ -408,7 +408,7 @@ int CAPEInfo::GetInfo(APE_DECOMPRESS_FIE
             }
             else
             {
-                WAVEFORMATEX wfeFormat; GetInfo(APE_INFO_WAVEFORMATEX, (int) &wfeFormat, 0);
+                WAVEFORMATEX wfeFormat; GetInfo(APE_INFO_WAVEFORMATEX, (long) &wfeFormat, 0);
                 WAVE_HEADER WAVHeader; FillWaveHeader(&WAVHeader, m_APEFileInfo.nWAVDataBytes, &wfeFormat,
                     m_APEFileInfo.nWAVTerminatingBytes);
                 memcpy(pBuffer, &WAVHeader, sizeof(WAVE_HEADER));
@@ -465,7 +465,7 @@ int CAPEInfo::GetInfo(APE_DECOMPRESS_FIE
         break;
     }
     case APE_INFO_IO_SOURCE:
-        nRetVal = (int) m_spIO.GetPtr();
+        nRetVal = (long) m_spIO.GetPtr();
         break;
     case APE_INFO_FRAME_BYTES:
     {
@@ -504,7 +504,7 @@ int CAPEInfo::GetInfo(APE_DECOMPRESS_FIE
         break;
     }
     case APE_INFO_TAG:
-        nRetVal = (int) m_spAPETag.GetPtr();
+        nRetVal = (long) m_spAPETag.GetPtr();
         break;
     }
 
diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEInfo.h gst-monkeysaudio-0.8.0/libmonkeysaudio/APEInfo.h
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APEInfo.h	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/APEInfo.h	2005-05-04 15:23:36.331639160 +0200
@@ -76,7 +76,7 @@ public:
     virtual ~CAPEInfo();
 
     // query for information
-    int GetInfo(APE_DECOMPRESS_FIELDS Field, int nParam1 = 0, int nParam2 = 0);
+    int GetInfo(APE_DECOMPRESS_FIELDS Field, long nParam1 = 0, long nParam2 = 0);
 
 private:
 
diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APESimple.cpp gst-monkeysaudio-0.8.0/libmonkeysaudio/APESimple.cpp
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/APESimple.cpp	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/APESimple.cpp	2005-05-04 15:23:36.332639008 +0200
@@ -156,14 +156,14 @@ int DecompressCore(const char * pInputFi
         if (spAPEDecompress == NULL || nFunctionRetVal != ERROR_SUCCESS) throw(nFunctionRetVal);
 
         // get the input format
-        THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAVEFORMATEX, (int) &wfeInput))
+        THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAVEFORMATEX, (long) &wfeInput))
 
         // allocate space for the header
         spTempBuffer.Assign(new unsigned char [spAPEDecompress->GetInfo(APE_INFO_WAV_HEADER_BYTES)], TRUE);
         if (spTempBuffer == NULL) throw(ERROR_INSUFFICIENT_MEMORY);
 
         // get the header
-        THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAV_HEADER_DATA, (int) spTempBuffer.GetPtr(), spAPEDecompress->GetInfo(APE_INFO_WAV_HEADER_BYTES)));
+        THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAV_HEADER_DATA, (long) spTempBuffer.GetPtr(), spAPEDecompress->GetInfo(APE_INFO_WAV_HEADER_BYTES)));
 
         // initialize the output
         if (nOutputMode == UNMAC_DECODER_OUTPUT_WAV)
@@ -235,7 +235,7 @@ int DecompressCore(const char * pInputFi
             {
                 spTempBuffer.Assign(new unsigned char[spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_BYTES)], TRUE);
                 if (spTempBuffer == NULL) throw(ERROR_INSUFFICIENT_MEMORY);
-                THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_DATA, (int) spTempBuffer.GetPtr(), spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_BYTES)))
+                THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_DATA, (long) spTempBuffer.GetPtr(), spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_BYTES)))
 
                 unsigned int nBytesToWrite = spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_BYTES);
                 unsigned int nBytesWritten = 0;
@@ -257,7 +257,7 @@ int DecompressCore(const char * pInputFi
                 spTempBuffer.Assign(new unsigned char[nTerminatingBytes], TRUE);
                 if (spTempBuffer == NULL) throw(ERROR_INSUFFICIENT_MEMORY);
 
-                THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_DATA, (int) spTempBuffer.GetPtr(), nTerminatingBytes))
+                THROW_ON_ERROR(spAPEDecompress->GetInfo(APE_INFO_WAV_TERMINATING_DATA, (long) spTempBuffer.GetPtr(), nTerminatingBytes))
 
                 if (bHasTag)
                 {
diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/MACLib.h gst-monkeysaudio-0.8.0/libmonkeysaudio/MACLib.h
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/MACLib.h	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/MACLib.h	2005-05-04 15:23:36.333638856 +0200
@@ -210,7 +210,7 @@ public:
     //  int nParam2
     //      generic parameter... usage is listed in APE_DECOMPRESS_FIELDS
     //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int GetInfo(APE_DECOMPRESS_FIELDS Field, int nParam1 = 0, int nParam2 = 0) = 0;
+    virtual int GetInfo(APE_DECOMPRESS_FIELDS Field, long nParam1 = 0, long nParam2 = 0) = 0;
 };
 
 /*************************************************************************************************
diff -Naupr gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/NNFilter.cpp gst-monkeysaudio-0.8.0/libmonkeysaudio/NNFilter.cpp
--- gst-monkeysaudio-0.8.0.orig/libmonkeysaudio/NNFilter.cpp	2004-02-11 18:29:18.000000000 +0100
+++ gst-monkeysaudio-0.8.0/libmonkeysaudio/NNFilter.cpp	2005-05-04 15:34:17.161218256 +0200
@@ -16,11 +16,11 @@ CNNFilter::CNNFilter(int nOrder, int nSh
     m_rbDeltaM . Create ( NN_WINDOW_ELEMENTS, m_nOrder );
     m_paryM = new short [m_nOrder];
 
-    if ( ( (int) & m_rbInput [0] ) & 7 )
+    if ( ( (long) & m_rbInput [0] ) & 7 )
         fprintf ( stderr, "m_rbInput misaligned, performance loss\n" );
-    if ( ( (int) & m_rbDeltaM [0] ) & 7 )
+    if ( ( (long) & m_rbDeltaM [0] ) & 7 )
         fprintf ( stderr, "m_rbDeltaM misaligned, performance loss\n" );
-    if ( ( (int) & m_paryM [0] ) & 7 )
+    if ( ( (long) & m_paryM [0] ) & 7 )
         fprintf ( stderr, "m_paryM misaligned, performance loss\n" );
 }
 
