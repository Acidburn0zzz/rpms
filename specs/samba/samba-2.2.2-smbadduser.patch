--- samba-2.2.2/source/smbadduser.locationfix	Mon Oct 13 08:13:11 1997
+++ samba-2.2.2/source/smbadduser	Fri Nov  9 12:50:44 2001
@@ -2,17 +2,24 @@
 #
 # smbadduser - Written by Mike Zakharoff
 #
+# * Sun Aug 6 2000 Philipp Knirsch <pknirsch@redhat.com>
+# - Bugfix to change file location from /etc to /etc/samba and to use
+#   smbpasswd -a to add the user entry to the smbpasswd file in case it didn't
+#   exist before.
+#
+
 unalias *
-set path = ($path /usr/local/samba/bin)
+set path = ($path)
 
-set smbpasswd = /usr/local/samba/private/smbpasswd
-set user_map  = /usr/local/samba/lib/users.map
+set smbpasswd = /etc/samba/smbpasswd
+set user_map  = /etc/samba/smbusers
 #
 # Set to site specific passwd command
 #
+set passwd    = "getent passwd"
 #set passwd    = "cat /etc/passwd"
 #set passwd    = "niscat passwd.org_dir"
-set passwd    = "ypcat passwd"
+#set passwd    = "ypcat passwd"
 
 set line = "----------------------------------------------------------"
 if ($#argv == 0) then
@@ -46,19 +53,23 @@
 		echo "ERROR: $unix Not in passwd database SKIPPING..."
 		continue
 	endif
-        set tmp = `cat $smbpasswd | awk -F: '$1==USR {print $1}' USR=$unix`
-	if ($#tmp != 0) then
-		echo "ERROR: $unix is already in $smbpasswd SKIPPING..."
-		continue
-	endif
 
-	echo "Adding: $unix to $smbpasswd"
-	eval $passwd | \
-	awk -F: '$1==USR { \
-	printf( "%s:%s:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:%s:%s:%s\n", $1, $3, $5, $6, $7) }' USR=$unix >> $smbpasswd
+	# Fix 8/7/2000 Phil Knirsch: Removed the smbpasswd stuff here and fixed
+	# the way the usermap gets updated as that one was really wrong: If a
+	# user was added twice the usermap would contain 2 entries! We now
+	# first select the existing entry, remove it from the usermap and add
+	# a new one with the new ntid. If something goes wrong the new entry
+	# will as before simply be added to the file (for manual fixing later).
+        set usr = `eval cat $user_map | awk -F= '{if(match($1, USR" *") != 0) print $2}' USR=$unix`
+
 	if ($unix != $ntid) then
-		echo "Adding: {$unix = $ntid} to $user_map"
-		echo "$unix = $ntid" >> $user_map
+		echo "Adding: {$unix = $usr $ntid} to $user_map"
+                cat $user_map | sed /"$unix.*"/d > $user_map.new
+                if (-e $user_map.new) then
+                    cp $user_map.new $user_map
+                endif
+                rm $user_map.new
+		echo "$unix = $usr $ntid" >> $user_map
 	endif
 	set new = ($new $unix)
 end
@@ -69,5 +80,9 @@
 foreach one ($new)
 	echo $line
 	echo "ENTER password for $one"
-	smbpasswd $one
+
+        # Fix Phil Knirsch 8/6/2000: Use the -a option to create the user
+        # entry in case it didn't exist before. This way we get rid of the
+        # file format dependent awk replacement in the previous version.
+	smbpasswd -a $one
 end
