--- linux/net/ipsec/ipsec_rcv.c.orig	2004-04-07 03:52:26.000000000 +0200
+++ linux/net/ipsec/ipsec_rcv.c	2004-04-07 03:55:50.000000000 +0200
@@ -651,6 +651,7 @@
 				    || ipsnext->ips_inext)
 #endif /* CONFIG_IPSEC_IPCOMP */
 				&& ipp->protocol != IPPROTO_IPIP
+				&& ipp->protocol != 0xFE
 				) {
 				KLIPS_PRINT(debug_rcv,
 					    "klips_debug:ipsec_rcv: "
@@ -1222,7 +1223,8 @@
 	if(ipsnext) {
 		ipsp = ipsnext;
 		irs.sa_len = satot(&irs.said, 0, irs.sa, sizeof(irs.sa));
-		if(ipp->protocol != IPPROTO_IPIP) {
+		if((ipp->protocol != IPPROTO_IPIP) &&
+			(ipp->protocol != 0xFE)) {
 			spin_unlock(&tdb_lock);
 			KLIPS_PRINT(debug_rcv,
 				    "klips_debug:ipsec_rcv: "
@@ -1263,6 +1265,8 @@
 			}
 		}
 
+	if (ipp->protocol == IPPROTO_IPIP) {
+
 		/*
 		 * XXX this needs to be locked from when it was first looked
 		 * up in the decapsulation loop.  Perhaps it is better to put
@@ -1310,6 +1314,8 @@
 			    "IPIP tunnel stripped.\n");
 		KLIPS_IP_PRINT(debug_rcv & DB_RX_PKTRX, ipp);
 
+	}
+
 		if(sysctl_ipsec_inbound_policy_check
 		   /*
 		      Note: "xor" (^) logically replaces "not equal"
