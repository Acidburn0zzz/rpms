--- dhcp-3.0.1rc12/client/scripts/linux.RHscript	2002-11-14 20:09:09.000000000 -0500
+++ dhcp-3.0.1rc12/client/scripts/linux	2004-01-24 08:49:54.829793151 -0500
@@ -19,12 +19,32 @@
 # address if it is not supplied. This might be much more easily done
 # by the dhclient C code, and passed on.
 
-# 4. TIMEOUT not tested. ping has a flag I don't know, and I'm suspicious
-# of the $1 in its args.
-
+function save_previous() {
+  if [ -e $1 -a ! -e $1.predhclient ]; then
+    mv $1 $1.predhclient 
+  fi
+}
 make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
+  if [ "${PEERDNS}" == "no" ]; then  
+      return 
+  fi
+
+  if [ x$reason == xRENEW ]; then 
+      if [ "$new_domain_name" == "$old_domain_name" ] && [ "$new_domain_servers" == "$old_domain_servers" ]; then
+	  return
+      fi
+  fi
+
+  if [ -n "$new_domain_name" ] || [ -n "$new_domain_name_servers" ]; then
+    save_previous /etc/resolv.conf
+    echo '; generated by /sbin/dhclient-script' > /etc/resolv.conf
+    if [ -n "$SEARCH" ]; then
+ 	echo search $SEARCH >> /etc/resolv.conf
+    else
+	if [ -n "$new_domain_name" ]; then
+ 	    echo search $new_domain_name >> /etc/resolv.conf
+        fi
+    fi
     chmod 644 /etc/resolv.conf
     for nameserver in $new_domain_name_servers; do
       echo nameserver $nameserver >>/etc/resolv.conf
@@ -53,6 +73,25 @@
   fi
 fi
 
+# Import Red Hat Linux configuration
+cd /etc/sysconfig/network-scripts;
+. /etc/sysconfig/network-scripts/network-functions
+. /etc/rc.d/init.d/functions
+
+[ -f ../network ] && . ../network
+[ -f ../networking/network ] && . ../networking/network
+
+CONFIG=$interface
+
+need_config ${CONFIG}
+
+[ -f "${CONFIG}" ] || {
+    echo $"$0: configuration for $interface not found." >&2
+    exit_with_hooks 1
+}   
+
+source_config
+
 release=`uname -r`
 release=`expr $release : '\(.*\)\..*'`
 relminor=`echo $release |sed -e 's/[0-9]*\.\([0-9][0-9]*\)\(\..*\)*$/\1/'`
@@ -106,13 +145,52 @@
   
 if [ x$reason = xBOUND ] || [ x$reason = xRENEW ] || \
    [ x$reason = xREBIND ] || [ x$reason = xREBOOT ]; then
-  current_hostname=`hostname`
-  if [ x$current_hostname = x ] || \
-     [ x$current_hostname = x$old_host_name ]; then
-    if [ x$current_hostname = x ] || \
-       [ x$new_host_name != x$old_host_name ]; then
+
+  if [ "${PEERNIS}" = no ]; then
+    :
+  elif [ -n "$new_nis_domain" ]; then
+	domainname "$new_nis_domain"
+	save_previous /etc/yp.conf
+	echo '# generated by /sbin/dhclient-script' > /etc/yp.conf
+	if [ -n "$new_nis_servers" ]; then
+	    for I in $new_nis_servers; do
+		echo "domain $new_nis_domain server $I" >> /etc/yp.conf
+	    done
+	else
+	    echo "domain $new_nis_domain broadcast" >> /etc/yp.conf
+	fi
+  elif [ -n "$new_nis_servers" ]; then
+      save_previous /etc/yp.conf
+      echo '# generated by /sbin/dhclient-script' > /etc/yp.conf
+      for I in $new_nis_servers; do
+	  echo "ypserver $I" >> /etc/yp.conf
+      done
+  fi
+
+  if [ "${PEERNTP}" = no ]; then
+    :
+  elif [ -n "$new_ntp_servers" ] && [ -e /etc/ntp.conf ]; then
+      save_previous /etc/ntp.conf
+      cat <<EOF > /etc/ntp.conf
+# generated by /sbin/dhclient-script
+restrict default ignore
+restrict 127.0.0.1
+driftfile /var/lib/ntp/drift
+broadcastdelay 0.008
+authenticate yes
+keys /etc/ntp/keys
+EOF
+      save_previous /etc/ntp/step-tickers
+      echo '# generated by /sbin/dhclient-script' > /etc/ntp/step-tickers
+      for I in $new_ntp_servers; do
+          echo "restrict $I nomodify notrap noquery" >> /etc/ntp.conf
+	  echo "server $I" >> /etc/ntp.conf
+	  echo "$I" >> /etc/ntp/step-tickers
+      done
+  fi
+
+  if [ -n "$new_host_name" ] && need_hostname; then
       hostname $new_host_name
-    fi
   fi
     
   if [ x$old_ip_address != x ] && [ x$alias_ip_address != x ] && \
@@ -174,8 +252,7 @@
   ifconfig $interface inet $new_ip_address $new_subnet_arg \
 					$new_broadcast_arg
   set $new_routers
-  ############## what is -w in ping?
-  if ping -q -c 1 $1; then
+  if ping -q -c 1 -w 10 $1; then
     if [ x$new_ip_address != x$alias_ip_address ] && \
 			[ x$alias_ip_address != x ]; then
       ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
@@ -188,7 +265,9 @@
     for router in $new_routers; do
       route add default gw $router
     done
-    make_resolv_conf
+    if [ "${PEERDNS}" != "no" ]; then 
+      make_resolv_conf
+    fi
     exit_with_hooks 0
   fi
   ifconfig $interface inet 0 down
