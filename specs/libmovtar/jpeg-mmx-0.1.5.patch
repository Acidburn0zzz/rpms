diff -ur jpeg-mmx-0.1.5.orig/jdcolor.c jpeg-mmx-0.1.5/jdcolor.c
--- jpeg-mmx-0.1.5.orig/jdcolor.c	2001-11-16 09:52:43.000000000 +0100
+++ jpeg-mmx-0.1.5/jdcolor.c	2003-08-13 10:14:32.000000000 +0200
@@ -125,13 +125,13 @@
 #endif
 
 #if defined(HAVE_MMX_INTEL_MNEMONICS)
-static const int64 bpte0 = 0x0080008000800080; // 128
-static const int64 bpte1 = 0x7168e9f97168e9f9; // for cb (Cb/b, Cb/g, Cb/b, Cb/g)
-static const int64 bpte2 = 0xd21a59bad21a59ba; // for cr (Cr/g, Cr/r, Cr/g, Cr/r)
+static const int64  __attribute__ ((used)) bpte0 = 0x0080008000800080; // 128
+static const int64  __attribute__ ((used)) bpte1 = 0x7168e9f97168e9f9; // for cb (Cb/b, Cb/g, Cb/b, Cb/g)
+static const int64  __attribute__ ((used)) bpte2 = 0xd21a59bad21a59ba; // for cr (Cr/g, Cr/r, Cr/g, Cr/r)
 #else
-static const int64 te0 = 0x0200020002000200; // -128 << 2
-static const int64 te1 = 0xe9fa7168e9fa7168; // for cb
-static const int64 te2 = 0x59bad24d59bad24d; // for cr
+static const int64  __attribute__ ((used)) te0 = 0x0200020002000200; // -128 << 2
+static const int64  __attribute__ ((used)) te1 = 0xe9fa7168e9fa7168; // for cb
+static const int64  __attribute__ ((used)) te2 = 0x59bad24d59bad24d; // for cr
 #endif
 //static const int64 te2 = 0x59ba524b59ba524b; // for cr
 /* How to calculate the constants (see constants from above for YCbCr->RGB):
Only in jpeg-mmx-0.1.5: jdcolor.c.~1~
Only in jpeg-mmx-0.1.5: jdcolor.c.~2~
diff -ur jpeg-mmx-0.1.5.orig/jidctint.c jpeg-mmx-0.1.5/jidctint.c
--- jpeg-mmx-0.1.5.orig/jidctint.c	2000-09-19 18:04:20.000000000 +0200
+++ jpeg-mmx-0.1.5/jidctint.c	2003-08-13 10:13:11.000000000 +0200
@@ -173,32 +173,32 @@
  * Perform dequantization and inverse DCT on one block of coefficients.
  */
 #define __int64 unsigned long long
-	static	__int64 fix_029_n089n196	= 0x098ea46e098ea46e;
-	static	__int64 fix_n196_n089		= 0xc13be333c13be333;
-	static	__int64 fix_205_n256n039	= 0x41b3a18141b3a181;
-	static	__int64 fix_n039_n256		= 0xf384adfdf384adfd;
-	static	__int64 fix_307n256_n196	= 0x1051c13b1051c13b;
-	static	__int64 fix_n256_n196		= 0xadfdc13badfdc13b;
-	static	__int64 fix_150_n089n039	= 0x300bd6b7300bd6b7;
-	static	__int64 fix_n039_n089		= 0xf384e333f384e333;
-	static	__int64 fix_117_117			= 0x25a125a125a125a1;
-	static	__int64 fix_054_054p076		= 0x115129cf115129cf;
-	static	__int64 fix_054n184_054		= 0xd6301151d6301151;
-
-	static	__int64 fix_054n184 		= 0xd630d630d630d630;
-	static	__int64 fix_054				= 0x1151115111511151;
-	static	__int64 fix_054p076			= 0x29cf29cf29cf29cf;
-	static	__int64 fix_n196p307n256	= 0xd18cd18cd18cd18c;
-	static	__int64 fix_n089n039p150	= 0x06c206c206c206c2;
-	static	__int64 fix_n256			= 0xadfdadfdadfdadfd;
-	static	__int64 fix_n039			= 0xf384f384f384f384;
-	static	__int64 fix_n256n039p205	= 0xe334e334e334e334;
-	static	__int64 fix_n196			= 0xc13bc13bc13bc13b;
-	static	__int64 fix_n089			= 0xe333e333e333e333;
-	static	__int64 fixn089n196p029		= 0xadfcadfcadfcadfc;
+	static	__int64 __attribute__ ((used)) fix_029_n089n196	= 0x098ea46e098ea46e;
+	static	__int64 __attribute__ ((used)) fix_n196_n089		= 0xc13be333c13be333;
+	static	__int64 __attribute__ ((used)) fix_205_n256n039	= 0x41b3a18141b3a181;
+	static	__int64 __attribute__ ((used)) fix_n039_n256		= 0xf384adfdf384adfd;
+	static	__int64 __attribute__ ((used)) fix_307n256_n196	= 0x1051c13b1051c13b;
+	static	__int64 __attribute__ ((used)) fix_n256_n196		= 0xadfdc13badfdc13b;
+	static	__int64 __attribute__ ((used)) fix_150_n089n039	= 0x300bd6b7300bd6b7;
+	static	__int64 __attribute__ ((used)) fix_n039_n089		= 0xf384e333f384e333;
+	static	__int64 __attribute__ ((used)) fix_117_117			= 0x25a125a125a125a1;
+	static	__int64 __attribute__ ((used)) fix_054_054p076		= 0x115129cf115129cf;
+	static	__int64 __attribute__ ((used)) fix_054n184_054		= 0xd6301151d6301151;
+
+	static	__int64 __attribute__ ((used)) fix_054n184 		= 0xd630d630d630d630;
+	static	__int64 __attribute__ ((used)) fix_054				= 0x1151115111511151;
+	static	__int64 __attribute__ ((used)) fix_054p076			= 0x29cf29cf29cf29cf;
+	static	__int64 __attribute__ ((used)) fix_n196p307n256	= 0xd18cd18cd18cd18c;
+	static	__int64 __attribute__ ((used)) fix_n089n039p150	= 0x06c206c206c206c2;
+	static	__int64 __attribute__ ((used)) fix_n256			= 0xadfdadfdadfdadfd;
+	static	__int64 __attribute__ ((used)) fix_n039			= 0xf384f384f384f384;
+	static	__int64 __attribute__ ((used)) fix_n256n039p205	= 0xe334e334e334e334;
+	static	__int64 __attribute__ ((used)) fix_n196			= 0xc13bc13bc13bc13b;
+	static	__int64 __attribute__ ((used)) fix_n089			= 0xe333e333e333e333;
+	static	__int64 __attribute__ ((used)) fixn089n196p029		= 0xadfcadfcadfcadfc;
 
-	static  __int64 const_0x2xx8		= 0x0000010000000100;
-	static  __int64 const_0x0808		= 0x0808080808080808;
+	static  __int64 __attribute__ ((used)) const_0x2xx8		= 0x0000010000000100;
+	static  __int64 __attribute__ ((used)) const_0x0808		= 0x0808080808080808;
 
 __inline void domidct8x8llmW(short *inptr, short *quantptr, int *wsptr,
 				   JSAMPARRAY outptr, int output_col);
Only in jpeg-mmx-0.1.5: jidctint.c.~1~
Only in jpeg-mmx-0.1.5: jidctint.c.~2~
