Index: kernel-module-pwcx/pwcx-9.0-beta-2/autogen.sh
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/autogen.sh	2004-05-24 11:06:07.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/autogen.sh	2004-05-24 11:07:20.000000000 +0200
@@ -0,0 +1,6 @@
+#!/bin/bash
+set -x
+aclocal -I m4 || exit 1
+autoconf || exit 1
+automake -a --foreign || exit 1
+./configure $@
Index: kernel-module-pwcx/pwcx-9.0-beta-2/configure.ac
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/configure.ac	2004-05-24 11:06:10.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/configure.ac	2004-06-04 16:55:28.140963744 +0200
@@ -0,0 +1,33 @@
+AC_INIT(2.6.4/pwc.h)
+
+AM_INIT_AUTOMAKE(pwc, 9.0-beta-2)
+
+dnl pick up ACLOCAL flags
+ACLOCAL_AMFLAGS="\${ACLOCAL_FLAGS} -I m4"
+AC_SUBST(ACLOCAL_AMFLAGS)
+
+dnl do all checks
+AS_LINUX
+
+dnl generate modtool
+AS_LINUX_MODTOOL
+
+dnl to do proper versioning, we need to know if we have pre-2.4 style
+dnl kernel or post-2.6
+AC_MSG_CHECKING([for kernel style])
+case $LINUX_VERSION_MAJOR.$LINUX_VERSION_MINOR in
+  2.[[67]])
+    AC_MSG_RESULT([post-2.6])
+    POST_2_6=yes
+    ;;
+  2.[[01234]])
+    AC_MSG_RESULT([pre-2.6])
+    POST_2_6=no
+    ;;
+  *)
+    AC_MSG_ERROR([Unknown Linux major.minor $LINUX_VERSION_MAJOR.$LINUX_VERSION_MINOR])
+    ;;
+esac
+AM_CONDITIONAL(POST_2_6, [test "$POST_2_6" = "yes"])
+
+AC_OUTPUT(Makefile 2.6.4/Makefile 2.4.25/Makefile pwcx/Makefile)
Index: kernel-module-pwcx/pwcx-9.0-beta-2/Makefile.am
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/Makefile.am	2004-05-24 11:06:13.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/Makefile.am	2004-06-04 16:54:36.149867592 +0200
@@ -0,0 +1,17 @@
+if POST_2_6
+2_4_DIR =
+2_6_DIR = 2.6.4
+else
+2_4_DIR = 2.4.25
+2_6_DIR =
+endif
+
+SUBDIRS = $(2_4_DIR) $(2_6_DIR) pwcx
+
+EXTRA_DIST = \
+  m4/as-linux.m4 \
+  m4/as-modtool.m4
+
+DISTCHECK_CONFIGURE_FLAGS = --with-modulesdir=`mktemp -d`
+
+DISTCLEANFILES = modtool
Index: kernel-module-pwcx/pwcx-9.0-beta-2/m4/as-linux.m4
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/m4/as-linux.m4	2004-05-24 11:06:26.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/m4/as-linux.m4	2004-06-04 16:39:09.510738152 +0200
@@ -0,0 +1,704 @@
+dnl as-linux.m4 0.2.1
+
+dnl autostars m4 macro for detecting a Linux source tree (or
+dnl equivalent) for compiling modules.
+
+dnl David Schleef <ds@schleef.org>
+dnl Frank Mori Hess <fmhess@users.sourceforge.net>
+dnl Thomas Vander Stichele <thomas@apestaart.org>
+
+dnl $Id: as-linux.m4,v 1.18 2004/06/03 16:35:58 thomasvs Exp $
+
+dnl AS_LINUX()
+dnl
+dnl this macro adds the options
+dnl --with-linuxdir        to specify a kernel build tree location
+dnl --with-linuxconfig     to specify a kernel .config file
+dnl --with-kernel-release  to specify an alternative uname -r
+dnl --with-machine         to specify an alternative uname -m
+dnl --with-rpm-target      to specify to match the given rpm --target option
+dnl --with-extraversion    to specify an EXTRAVERSION override
+dnl --with-modulesdir      to specify the base install location of modules
+dnl --with-modulesdeveldir to specify the base install location of build stuff
+
+dnl this macro defines:
+dnl LINUX_DIR
+dnl   The directory where the Linux source resides.
+dnl CONFIG_FILE
+dnl   The Linux config file
+dnl LINUX_ARCH
+dnl   $(ARCH) in kernel Makefiles
+dnl LINUX_AFLAGS
+dnl   $(AFLAGS) in kernel Makefiles
+dnl LINUX_LDFLAGS
+dnl   Linker flags used by Linux
+dnl LINUX_ARFLAGS
+dnl   Archiver flags used by Linux
+dnl LINUX_CROSS_COMPILE
+dnl   Cross-compiler prefix, if any. (example: "powerpc-linux-")
+dnl LINUX_KERNELRELEASE
+dnl   Kernel release name (2.4.5-pre4-ac5-rmk), $(KERNELRELEASE) in
+dnl   Linux Makefiles.
+dnl LINUX_CFLAGS
+dnl   CFLAGS used by Linux.  Includes both $CFLAGS and $MODFLAGS from
+dnl   kernel Makefiles. Also includes warnings and optimization.
+dnl LINUX_CC
+dnl   Compiler used by Linux.
+dnl LINUX_LD
+dnl   Path to linker (possibly with options) used by Linux.
+dnl LINUX_AS
+dnl   Assembler used by Linux.
+dnl LINUX_MODULE_EXT
+dnl   Module extension (.o or .ko)
+dnl LINUX_MODPOST
+dnl   path to modpost script
+dnl LINUX_SMP
+dnl   set to yes if the kernel is SMP
+dnl modulesdir
+dnl   base install path for kernel modules
+dnl modulesdeveldir
+dnl   base install path for kernel module development files
+dnl 
+dnl End of search list.
+
+dnl main entry point
+dnl checks the version, and figures out all flags to use to make modules.
+AC_DEFUN([AS_LINUX],
+[
+	dnl check if user supplied a uname -r, and if not use the running one
+	AS_LINUX_KERNEL_RELEASE()
+	dnl check if user supplied a uname -m, and if not use the running one
+	AS_LINUX_MACHINE() 	 
+	dnl check if the user supplied an rpm target arch
+	dnl override the LINUX_MACHINE value if he did
+	AS_LINUX_RPM_TARGET($LINUX_KERNEL_RELEASE) 	 
+  	 
+	dnl find the kernel source tree for the given uname -r 	 
+	AS_LINUX_DIR($LINUX_KERNEL_RELEASE) 	 
+	dnl check if user supplied an EXTRAVERSION, and if not get from uname -r
+	AS_LINUX_EXTRAVERSION($LINUX_KERNEL_RELEASE) 	 
+	dnl check if user supplied a config file; if not, guess a good one
+	AS_LINUX_CONFIG($LINUX_DIR, $LINUX_KERNEL_RELEASE, $LINUX_MACHINE) 	 
+	dnl check if we're building on pre-FC2 Red Hat/Fedora,
+	dnl and add some flags if we are 	 
+	AS_CHECK_REDHAT_PRE_FC2() 	 
+	dnl check if we're building SMP, and set LINUX_SMP if we are
+	AS_CHECK_SMP()
+	dnl check for where to install modules
+	AS_LINUX_MODULESDIR($LINUX_KERNEL_RELEASE)
+	dnl check for where to install module development files
+	AS_LINUX_MODULESDEVELDIR($LINUX_DIR)
+	dnl check for the MAJOR/MINOR version of Linux 	 
+	AS_LINUX_VERSION_MAJOR_MINOR($LINUX_DIR)
+
+	dnl now call the correct macro to get compiler flags
+	dnl the versioned AS_LINUX macros just use the global variables
+	dnl this could be cleaned up later on if we feel like it
+	case $LINUX_VERSION_MAJOR.$LINUX_VERSION_MINOR in
+		2.6)
+			AS_LINUX_2_6()
+			;;
+		2.[[01234]])
+			AS_LINUX_2_4()
+			;;
+		*)
+			AC_MSG_ERROR([Unknown Linux major.minor $LINUX_VERSION_MAJOR.$LINUX_VERSION_MINOR])
+			;;
+	esac
+])
+
+
+dnl check if we can find a source dir for the Linux kernel
+dnl defines LINUX_DIR to the absolute location of a usable kernel source tree
+AC_DEFUN([AS_LINUX_DIR],
+[
+	AC_ARG_WITH([linuxdir],
+		[AC_HELP_STRING([--with-linuxdir=DIR],
+			[specify path to Linux source directory])],
+		[LINUX_DIR="${withval}"],
+		[LINUX_DIR=default])
+
+	if test "${LINUX_DIR}" != "default" ; then
+		AS_TRY_LINUX_DIR([${LINUX_DIR}], , AC_MSG_ERROR([Linux dir not found]) )
+	fi
+
+	if test "${LINUX_DIR}" = "default" ; then
+		dir="/lib/modules/`uname -r`/build";
+		AS_TRY_LINUX_DIR([${dir}], [LINUX_DIR=${dir}], )
+	fi
+	if test "${LINUX_DIR}" = "default" ; then
+		dir="../linux";
+		AS_TRY_LINUX_DIR([${dir}], [LINUX_DIR=${dir}], )
+	fi
+	if test "${LINUX_DIR}" = "default" ; then
+		dir="/usr/src/linux";
+		AS_TRY_LINUX_DIR([${dir}], [LINUX_DIR=${dir}], )
+	fi
+
+	if test "${LINUX_DIR}" = "default" ; then
+		AC_MSG_ERROR([Linux source directory not found])
+	fi
+
+	AC_SUBST(LINUX_DIR)
+])
+
+dnl check if the given candidate path for a linux source tree is usable
+AC_DEFUN([AS_TRY_LINUX_DIR],
+	[AC_MSG_CHECKING(for Linux in $1)
+
+	if test -f "$1/Makefile" ; then
+		result=yes
+		$2
+	else
+		result="not found"
+		$3
+	fi
+
+	AC_MSG_RESULT($result)
+])
+
+dnl allow for specifying a kernel release (uname -r) to build for
+dnl use uname -r of running one if not specified
+dnl store result in LINUX_KERNEL_RELEASE
+AC_DEFUN([AS_LINUX_KERNEL_RELEASE],
+[
+	AC_ARG_WITH([kernel-release],
+		[AC_HELP_STRING([--with-kernel-release=RELEASE],
+			[specify the "uname -r"-value to build for])],
+		[LINUX_KERNEL_RELEASE="${withval}"],
+		[LINUX_KERNEL_RELEASE=`uname -r`])
+        if test "x$LINUX_KERNEL_RELEASE" = "xyes";
+        then
+		LINUX_KERNEL_RELEASE=`uname -r`
+        fi
+        AC_MSG_NOTICE([Using $LINUX_KERNEL_RELEASE as the uname -r value])
+])
+
+dnl allow for specifying a machine (uname -m) to build for
+dnl use uname -, of running one if not specified
+dnl store result in LINUX_MACHINE
+AC_DEFUN([AS_LINUX_MACHINE],
+[
+	AC_ARG_WITH([machine],
+		[AC_HELP_STRING([--with-machine=MACHINE],
+			[specify the "uname -m"-value to build for])],
+		[LINUX_MACHINE="${withval}"],
+		[LINUX_MACHINE=`uname -m`])
+        if test "x$LINUX_MACHINE" = "xyes";
+        then
+		LINUX_MACHINE=`uname -r`
+        fi
+        AC_MSG_NOTICE([Using $LINUX_MACHINE as the uname -m value])
+])
+dnl allow for specifying an rpm target arch
+dnl if none specified, try to guess one from running rpm querying for
+dnl the kernel with the uname -r
+dnl this is so configure without arguments works out of the box
+dnl FIXME: investigate if uname -p is a correct guess for this, and if
+dnl we should have a flag for specifying it instead
+
+dnl this macro possibly overrides LINUX_MACHINE
+
+dnl first argument is the kernel release building for
+AC_DEFUN([AS_LINUX_RPM_TARGET],
+[
+	RELEASE=$1
+	AC_ARG_WITH([rpm-target],
+		[AC_HELP_STRING([--with-rpm-target=TARGET],
+			[specify the target arch to build for])],
+		[LINUX_RPM_TARGET="${withval}"],
+		[LINUX_RPM_TARGET=])
+	if test "x$LINUX_RPM_TARGET" = "x"
+	then
+		dnl if we have rpm, try to guess the target of the kernel
+		dnl we want to build for using rpm
+		AC_PATH_PROG(RPM, rpm, yes, no)
+		if test "x$RPM" = "xyes"
+		then
+			if rpm -q kernel-$RELEASE > /dev/null
+			then
+				LINUX_RPM_TARGET=`rpm -q --queryformat %{arch} kernel-$RELEASE`
+			else
+				AC_MSG_NOTICE([Cannot guess target arch, consider setting it using --with-rpm-target])
+			fi
+		fi
+	fi
+
+	dnl now override LINUX_MACHINE if LINUX_RPM_TARGET is set
+	if test "x$LINUX_RPM_TARGET" != "x"
+	then
+		dnl override LINUX_MACHINE based on this
+		dnl FIXME: add other possible Red Hat/Fedora/rpm targets here
+		LINUX_MACHINE=
+		case "$LINUX_RPM_TARGET" in
+			i?86) LINUX_MACHINE=i386;;
+			athlon) LINUX_MACHINE=i386;;
+			x86_64) LINUX_MACHINE=x86_64;;
+		esac
+		if test "x$LINUX_MACHINE" = "x"
+		then
+		AC_MSG_ERROR(Could not guess uname -m value from target $LINUX_RPM_TARGET)
+		fi
+	fi
+])
+
+
+dnl allow for specifying an override for EXTRAVERSION
+dnl if none specified, make it from the passed-in KERNEL_RELEASE (uname -r)
+dnl resulting value is stored in LINUX_EXTRAVERSION
+dnl first argument is the uname -r string to use as a fallback
+AC_DEFUN([AS_LINUX_EXTRAVERSION],
+[
+	KERNEL_RELEASE=[$1]
+	dnl extract the default by getting everything after first -
+	LINUX_EXTRAVERSION="-`echo $KERNEL_RELEASE | cut -d- -f 2-`"
+	AC_ARG_WITH([extraversion],
+		[AC_HELP_STRING([--with-extraversion=FILE],
+			[specify override for kernel EXTRAVERSION])],
+		[LINUX_EXTRAVERSION="${withval}"],)
+])
+
+
+dnl check if we can find a config file for the Linux kernel
+dnl defines LINUX_CONFIG to the absolute location of a usable
+dnl kernel source config file
+
+dnl for rpm distros, it can try and guess the correct config file by
+dnl checking the global LINUX_RPM_TARGET variable set somewhere else
+dnl (FIXME: move this to an argument instead ?)
+
+dnl first argument is LINUX_DIR to check for possible configs
+dnl second argument is kernel-release (uname -r)
+dnl third argument is machine (uname -m)
+
+AC_DEFUN([AS_LINUX_CONFIG],
+[
+	LINUX_DIR=[$1]
+	KERNEL_RELEASE=[$2]
+	MACHINE=[$3]
+	AC_ARG_WITH([linuxconfig],
+		[AC_HELP_STRING([--with-linuxconfig=FILE],
+			[specify path to Linux configuration file])],
+		[LINUX_CONFIG="${withval}"],
+		[LINUX_CONFIG=default])
+
+	dnl if a file got specified, try it as a linux config file
+	if test "${LINUX_CONFIG}" != "default" ; then
+		AS_TRY_LINUX_CONFIG($LINUX_CONFIG, $MACHINE,
+                                    ,, AC_MSG_ERROR([Linux config not found]) )
+	fi
+
+        dnl if no file specified, first check for the regular .config file
+        dnl in LINUX_DIR created by manual configuration
+	if test "${LINUX_CONFIG}" = "default" ; then
+		file="$LINUX_DIR/.config";
+		AS_TRY_LINUX_CONFIG($file, $MACHINE,
+		                    [LINUX_CONFIG=${file}], )
+	fi
+        dnl second, try to guess what config file to use for the current kernel
+	dnl FIXME: the possible arch is from rpmbuild --target, and is
+	dnl different from the value of ARCH (Makefile) or MACHINE (uname -m)
+	dnl so we should have a redhat flag to specify the target to find
+	dnl the correct config file
+	if test "${LINUX_CONFIG}" = "default" && test "x$LINUX_RPM_TARGET" != "x"; then
+		dnl Red Hat stores configuration files for their built kernels
+		dnl named kernel-(version)-(arch)(extra).config
+		dnl where arch is athlon, i386, i586, i686, x86_64
+		dnl and (extra) is empty or -smp, -BOOT, -bigmem
+		dnl haven't seen combinations of extra yet as of FC1
+		KVERSION=`echo $KERNEL_RELEASE | cut -d- -f1`
+		extra=
+		echo $KERNEL_RELEASE | grep smp && EXTRA="-smp"
+		echo $KERNEL_RELEASE | grep bigmem && EXTRA="-bigmem"
+		echo $KERNEL_RELEASE | grep BOOT && EXTRA="-BOOT"
+		file="$LINUX_DIR/configs/kernel-$KVERSION-$LINUX_RPM_TARGET$EXTRA.config"
+		AS_TRY_LINUX_CONFIG($file, $MACHINE,
+		                    [LINUX_CONFIG=${file}], )
+	fi
+	if test "${LINUX_CONFIG}" = "default" ; then
+		AC_MSG_ERROR([
+The kernel source tree at ${LINUX_DIR} is not configured,
+and no configuration files in config/ matching your kernel were found.
+Fix before continuing or specify a config file using --with-configfile.])
+	fi
+
+	AC_SUBST(LINUX_CONFIG)
+])
+
+dnl check if the given candidate config file is usable
+dnl FIXME: it would be nice if it could check if it matches the
+dnl given machine (uname -m)
+AC_DEFUN([AS_TRY_LINUX_CONFIG],
+[
+	CFG=[$1]
+	MACHINE=[$2]
+	AC_MSG_CHECKING($CFG)
+
+	if test -f "$CFG" ; then
+		result=yes
+		ifelse([$3], , :, [$3])
+	else
+		result="not found"
+		ifelse([$4], , :, [$4])
+	fi
+	AC_MSG_RESULT($result)
+])
+
+dnl check if RED_HAT_LINUX_KERNEL is defined
+dnl pre-FC2 RH/Fedora defines this in linux/rhconfig.h
+dnl included from linux/version.h
+dnl if this is present, a few extra defines need to be present to make sure
+dnl symbol versioning is correct
+dnl uses LINUX_DIR to find rhconfig.h
+AC_DEFUN([AS_CHECK_REDHAT_PRE_FC2],
+[
+	AC_MSG_CHECKING(Pre-FC2 Red Hat/Fedora kernel)
+        HAVE_REDHAT_KERNEL=false
+        ac_save_CFLAGS="$CFLAGS"
+        CFLAGS="$CFLAGS -I${LINUX_DIR}/include/linux"
+        AC_COMPILE_IFELSE(AC_LANG_PROGRAM([
+#define __BOOT_KERNEL_H_
+#include "rhconfig.h"
+int code = RED_HAT_LINUX_KERNEL;
+	]),
+        AC_MSG_RESULT(found); HAVE_REDHAT_KERNEL=true,
+        AC_MSG_RESULT(not found))
+	dnl restore CFLAGS
+        CFLAGS="$ac_save_CFLAGS"
+
+	dnl check for Red Hat define flags to use - see /sbin/mkkerneldoth
+
+	dnl initialize the booleans we want to detect
+	ENTERPRISE='0'
+	SMP='0'
+	UP='0'
+	BIGMEM='0'
+	HUGEMEM='0'
+
+	dnl get variables from the currently running kernel as default 
+	KERNEL_TYPE=`uname -r | sed 's_^.*\(smp\|enterprise\|bigmem\|hugemem\)$_\1_;t;s_.*__;'`
+	KERNEL_RELEASE=`uname -r | sed 's|smp\|enterprise\|bigmem\|hugemem||g'`
+	KERNEL_ARCH=`uname -m`
+
+	dnl check the config file and override KERNEL_ARCH
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_M386, KERNEL_ARCH=i386)
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_M586, KERNEL_ARCH=i586)
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_M686, KERNEL_ARCH=i686)
+	dnl for some reason the i686 bigmem config file has PENTIUM
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_MPENTIUMIII, KERNEL_ARCH=i686)
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_MK7, KERNEL_ARCH=athlon)
+
+	dnl check the config file and override KERNEL_TYPE
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_SMP, KERNEL_TYPE=smp)
+	dnl bigmem is also smp, so this check is done after smp to override
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_HIGHMEM64G, KERNEL_TYPE=bigmem)
+
+	dnl FIXME: need to check hugemem and enterprise config files, which
+	dnl aren't provided in Fedora Core 1 !
+
+	case "$KERNEL_TYPE" in
+		smp) SMP='1';;
+		enterprise) ENTERPRISE='1';;
+		bigmem) BIGMEM='1';;
+		hugemem) HUGEMEM='1';;
+		*) UP='1';;
+	esac
+	REDHAT_CFLAGS="-D__BOOT_KERNEL_H_ -D__MODULE_KERNEL_$KERNEL_ARCH=1"
+        REDHAT_CFLAGS="$REDHAT_CFLAGS -D__BOOT_KERNEL_ENTERPRISE=$ENTERPRISE"
+        REDHAT_CFLAGS="$REDHAT_CFLAGS -D__BOOT_KERNEL_UP=$UP"
+        REDHAT_CFLAGS="$REDHAT_CFLAGS -D__BOOT_KERNEL_SMP=$SMP"
+        REDHAT_CFLAGS="$REDHAT_CFLAGS -D__BOOT_KERNEL_BIGMEM=$BIGMEM"
+        REDHAT_CFLAGS="$REDHAT_CFLAGS -D__BOOT_KERNEL_HUGEMEM=$HUGEMEM"
+
+	LINUX_REDHAT_CFLAGS="$REDHAT_CFLAGS"
+
+	AC_SUBST(LINUX_KERNEL_TYPE, "$KERNEL_TYPE")
+])
+
+dnl check if we're building on SMP
+dnl set LINUX_SMP to yes if we are
+AC_DEFUN([AS_CHECK_SMP],
+[
+	LINUX_SMP="no"
+	dnl check the config file and override KERNEL_TYPE
+        AS_CHECK_LINUX_CONFIG_OPTION(CONFIG_SMP, LINUX_SMP="yes")
+	AC_SUBST(LINUX_SMP)
+])
+
+dnl add an argument to specify/override the module install path
+dnl if nothing specified, it will be /lib/modules/(kernelrel)
+AC_DEFUN([AS_LINUX_MODULESDIR],
+[
+	KERNEL_RELEASE=[$1]
+	AC_ARG_WITH([modulesdir],
+		[AC_HELP_STRING([--with-modulesdir=DIR],
+			[specify path to kernel-specific modules install directory])],
+		[MODULESDIR="${withval}"],
+		[MODULESDIR=default])
+
+	if test "${MODULESDIR}" = "default" ; then
+		MODULESDIR="/lib/modules/${KERNEL_RELEASE}"
+	fi
+	dnl make it available to Makefiles so it can be used in ...dir
+	AC_SUBST(modulesdir, $MODULESDIR)
+	AC_MSG_NOTICE([Putting kernel modules under ${MODULESDIR}])
+])
+
+dnl add an argument to specify/override the module devel install path
+dnl if nothing specified, it will be the passed in LINUXDIR)
+AC_DEFUN([AS_LINUX_MODULESDEVELDIR],
+[
+	LINUXDIR=[$1]
+	AC_ARG_WITH([modulesdeveldir],
+		[AC_HELP_STRING([--with-modulesdeveldir=DIR],
+			[specify path to kernel-specific module development install directory])],
+		[MODULESDEVELDIR="${withval}"],
+		[MODULESDEVELDIR=default])
+
+	if test "${MODULESDEVELDIR}" = "default" ; then
+		MODULESDEVELDIR="${LINUXDIR}"
+	fi
+	dnl make it available to Makefiles so it can be used in ...dir
+	AC_SUBST(modulesdeveldir, $MODULESDEVELDIR)
+	AC_MSG_NOTICE([Putting kernel module development files under ${MODULESDEVELDIR}])
+])
+
+AC_DEFUN([AS_LINUX_2_6],
+[
+	AC_MSG_CHECKING(for Linux CFLAGS)
+
+	{
+	  tmpdir=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+	  test -n "$tmpdir" && test -d "$tmpdir"
+	} ||
+	{
+	  tmpdir=./confstat$$-$RANDOM
+	  (umask 077 && mkdir $tmpdir)
+	} ||
+	{
+	  echo "$me: cannot create a temporary directory in ." >&2
+	  { (exit 1); exit 1; }
+	}
+
+	tmpdir=`pwd`/$tmpdir
+
+	cat >${tmpdir}/Makefile <<EOF
+obj-m += fake.o
+
+\$(obj)/fake.c: flags
+	touch \$(obj)/fake.c
+
+.PHONY: flags
+flags:
+	echo LINUX_ARCH=\"\$(ARCH)\" >>\$(obj)/flags
+	echo LINUX_AFLAGS=\"\$(AFLAGS)\" | sed 's,include,"\$(LINUXDIR)/include",g'>>\$(obj)/flags
+	echo LINUX_LDFLAGS=\"\" >>\$(obj)/flags
+	echo LINUX_ARFLAGS=\"\$(ARFLAGS)\" >>\$(obj)/flags
+	echo LINUX_CROSS_COMPILE=\"\$(CROSS_COMPILE)\" >>\$(obj)/flags
+	echo LINUX_KERNELRELEASE=\"\$(KERNELRELEASE)\" >>\$(obj)/flags
+	echo LINUX_CFLAGS=\"\$(CFLAGS) \$(CPPFLAGS)\" | sed 's,Iinclude,I\$(LINUXDIR)/include,g' >>\$(obj)/flags
+	echo LINUX_CFLAGS_MODULE=\"\$(CFLAGS_MODULE)\" >>\$(obj)/flags
+	echo LINUX_CC=\"\$(CC)\" >>\$(obj)/flags
+	echo LINUX_LD=\"\$(LD) \$(LDFLAGS) \$(LDFLAGS_MODULE)\" >>\$(obj)/flags
+	echo LINUX_AS=\"\$(AS)\" >>\$(obj)/flags
+EOF
+
+	echo ${MAKE-make} -C ${LINUX_DIR} V=1 SUBDIRS=${tmpdir} LINUXDIR=${LINUX_DIR} MODVERDIR=${tmpdir} modules >&5 2>&5
+	${MAKE-make} -C ${LINUX_DIR} V=1 SUBDIRS=${tmpdir} LINUXDIR=${LINUX_DIR} MODVERDIR=${tmpdir} modules >&5 2>&5
+	. ${tmpdir}/flags
+	rm -rf ${tmpdir}
+
+	LINUX_MODULE_EXT=".ko"
+
+	LINUX_CFLAGS="$LINUX_CFLAGS $LINUX_CFLAGS_MODULE"
+	LINUX_MODPOST="$LINUX_DIR/scripts/modpost"
+
+	AC_SUBST(LINUX_ARCH)
+	AC_SUBST(LINUX_AFLAGS)
+	AC_SUBST(LINUX_LDFLAGS)
+	AC_SUBST(LINUX_ARFLAGS)
+	AC_SUBST(LINUX_CROSS_COMPILE)
+	AC_SUBST(LINUX_KERNELRELEASE)
+	AC_SUBST(LINUX_CFLAGS)
+	AC_SUBST(LINUX_CC)
+	AC_SUBST(LINUX_LD)
+	AC_SUBST(LINUX_AS)
+	AC_SUBST(LINUX_MODULE_EXT)
+	AC_SUBST(LINUX_MODPOST)
+
+	AC_MSG_RESULT([$LINUX_CFLAGS])
+])
+
+dnl checks kernel's Makefile for make variables for Linux 2.4
+dnl adds LINUX_REDHAT_CFLAGS if non-empty
+AC_DEFUN([AS_LINUX_2_4],
+[
+	AC_MSG_CHECKING(for Linux 2.4 make flags)
+	dnl we try to figure out the CFLAGS by invoking the Makefile on
+        dnl a test dir
+        dnl we use the correct config file by substituting the MAKEFILES
+        dnl Makefile variable, which originally points to .config
+
+	if [[ ! -e "${LINUX_DIR}/.hdepend" ]];then
+		AC_MSG_ERROR([
+You need to run 'make dep' on the kernel source before continuing.])
+	fi
+
+        if test "x$LINUX_EXTRAVERSION" == "x"; then
+          EX=
+        else
+          EX="EXTRAVERSION=$LINUX_EXTRAVERSION"
+        fi
+
+        POPDIR=`(pwd)`
+        cd ${LINUX_DIR}
+        TMPFILE=`mktemp /tmp/linux.XXXXXXXX` || exit 1
+	# combine the kernel's Makefile,
+	# sedded to use our proposed config file,
+	# sedded to use our proposed machine value,
+	# with the extra target we add here, to get cflags
+	# we do not want entering/leaving info on distcheck so we run with -s
+	( cat Makefile | sed "s|\.config|${LINUX_CONFIG}|g" | sed "s|shell uname -m|shell echo ${LINUX_MACHINE}|g" && cat <<EOF ) | make -s -f - get_cflags $EX > ${TMPFILE}
+get_cflags:
+	@echo LINUX_ARCH=\"\$(ARCH)\"
+	@echo LINUX_AFLAGS=\"\$(AFLAGS)\" | sed 's_Iinclude_I\"\$(LINUXDIR)/include\"_g'
+	@echo LINUX_LDFLAGS=\"\"
+	@echo LINUX_ARFLAGS=\"\$(ARFLAGS)\"
+	@echo LINUX_CROSS_COMPILE=\"\$(CROSS_COMPILE)\"
+	@echo LINUX_KERNELRELEASE=\"\$(KERNELRELEASE)\"
+	@echo LINUX_CFLAGS=\"\$(CFLAGS)\" | sed 's_Iinclude_I\"\$(LINUXDIR)/include\"_g'
+	@echo LINUX_MODFLAGS=\"\$(MODFLAGS)\"
+	@echo LINUX_CC=\"\$(CC)\"
+	@echo LINUX_LD=\"\$(LD) \$(LDFLAGS)\"
+	@echo LINUX_AS=\"\$(AS)\"
+EOF
+        . ${TMPFILE}
+        rm -rf ${TMPFILE}
+        cd $POPDIR
+
+        LINUX_MODULE_EXT=".o"
+
+	LINUX_CFLAGS="$LINUX_CFLAGS $LINUX_MODFLAGS"
+
+	dnl if we have REDHAT_CFLAGS, put them in LINUX_CFLAGS
+	if test "x$REDHAT_CFLAGS" != "x";
+	then
+		LINUX_CFLAGS="$LINUX_CFLAGS $REDHAT_CFLAGS"
+	fi
+	AC_SUBST(LINUX_ARCH)
+	AC_SUBST(LINUX_AFLAGS)
+	AC_SUBST(LINUX_LDFLAGS)
+	AC_SUBST(LINUX_ARFLAGS)
+	AC_SUBST(LINUX_CROSS_COMPILE)
+	AC_SUBST(LINUX_KERNELRELEASE)
+	AC_SUBST(LINUX_CFLAGS)
+	AC_SUBST(LINUX_CC)
+	AC_SUBST(LINUX_LD)
+	AC_SUBST(LINUX_AS)
+	AC_SUBST(LINUX_MODULE_EXT)
+
+	AC_MSG_RESULT([ok])
+
+	AC_MSG_CHECKING(for Linux 2.4 CFLAGS)
+	AC_MSG_RESULT($LINUX_CFLAGS)
+	AC_MSG_CHECKING(for Linux 2.4 LDFLAGS)
+	AC_MSG_RESULT($LINUX_LDFLAGS)
+])
+
+AC_DEFUN([AS_CHECK_LINUX_CONFIG_OPTION],
+[
+	AC_MSG_CHECKING([Linux config option $1])
+
+	if grep '^$1=y$' ${LINUX_CONFIG} >/dev/null 2>/dev/null; then
+		result=yes
+		$2
+	else if grep '^$1=m$' ${LINUX_CONFIG} >/dev/null 2>/dev/null; then
+		result=module
+		$3
+	else
+		result=no
+		$4
+	fi
+	fi
+
+	AC_MSG_RESULT([$result])
+])
+
+AC_DEFUN([AS_LINUX_CONFIG_OPTION],
+[
+	AS_CHECK_LINUX_CONFIG_OPTION([$1],
+		[$1=yes],
+		[$1=module],
+		[$1=no])
+
+	AM_CONDITIONAL([$1],[test "${$1}" = yes])
+])
+
+AC_DEFUN([AS_LINUX_CONFIG_OPTION_MODULE],
+[
+	AS_CHECK_LINUX_CONFIG_OPTION([$1],
+		[$1=yes],
+		[$1=module],
+		[$1=no])
+
+	AM_CONDITIONAL([$1],[test "${$1}" = yes -o "${$1}" = module])
+])
+
+dnl check for the major/minor version of the Linux source by checking
+dnl the headers
+dnl first argument is the linux directory
+dnl sets LINUX_VERSION_MAJOR and LINUX_VERSION_MINOR
+AC_DEFUN([AS_LINUX_VERSION_MAJOR_MINOR],
+[
+	LINUX_DIR=[$1]
+	AC_MSG_CHECKING([Linux major/minor version])
+
+	if [[ ! -f "${LINUX_DIR}/include/linux/version.h" ]];then
+		AC_MSG_ERROR([The header file include/linux/version.h does not exist.
+For 2.6 kernels, it can be generated by running 'make prepare' in
+the kernel source directory.])
+	fi
+        dnl the next set of tests is for figuring out version major/minor
+        dnl we make sure we have the right version.h by faking out CFLAGS
+	dnl since we want to avoid including linux/version.h and acidentally
+	dnl pick up /usr/include/linux
+	dnl we still add ${LINUX_DIR}/include so the Red Hat version can pick
+	dnl up linux/rhversion.h
+        ac_save_CFLAGS="$CFLAGS"
+        CFLAGS="$CFLAGS -I${LINUX_DIR}/include/linux -I${LINUX_DIR}/include"
+        dnl make sure we find version.h and it contains LINUX_VERSION_CODE
+        AC_COMPILE_IFELSE(AC_LANG_PROGRAM([
+/* to bypass the /boot/kernel.h inclusion for pre-2.6 Red Hat */
+#define __BOOT_KERNEL_H_
+#include "version.h"
+int code = LINUX_VERSION_CODE;
+]),
+ :, AC_MSG_ERROR([${LINUX_DIR}/include/linux/version.h does not contain LINUX_VERSION_CODE]))
+
+
+        dnl figure out the linux kernel version major and minor
+        dnl using the LINUX_VERSION_CODE defined in include/linux/version.h
+        AC_RUN_IFELSE(AC_LANG_PROGRAM([
+/* to bypass the /boot/kernel.h inclusion for pre-2.6 Red Hat */
+#define __BOOT_KERNEL_H_
+#include "version.h"
+#define KERNEL_VERSION_MAJOR(code) ((code) >> 16)
+],[
+  return KERNEL_VERSION_MAJOR(LINUX_VERSION_CODE);
+]),
+		LINUX_VERSION_MAJOR=0, 
+		LINUX_VERSION_MAJOR=$?)
+        AC_RUN_IFELSE(AC_LANG_PROGRAM([
+/* to bypass the /boot/kernel.h inclusion for pre-2.6 Red Hat */
+#define __BOOT_KERNEL_H_
+#include "version.h"
+#define KERNEL_VERSION_MINOR(code) (((code) >> 8) % (2 << 8))
+],[
+  return KERNEL_VERSION_MINOR(LINUX_VERSION_CODE);
+]),
+		LINUX_VERSION_MINOR=0, 
+		LINUX_VERSION_MINOR=$?)
+        AC_MSG_RESULT($LINUX_VERSION_MAJOR.$LINUX_VERSION_MINOR)
+	dnl restore CFLAGS
+        CFLAGS="$ac_save_CFLAGS"
+])
Index: kernel-module-pwcx/pwcx-9.0-beta-2/m4/as-modtool.m4
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/m4/as-modtool.m4	2004-05-24 11:06:29.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/m4/as-modtool.m4	2004-06-04 16:39:11.236475800 +0200
@@ -0,0 +1,147 @@
+dnl as-modtool.m4 0.0.1
+dnl autostars m4 macro for building modtool, a linker for Linux kernel
+dnl modules
+
+dnl David Schleef <ds@schleef.org>
+dnl Frank Mori Hess <fmhess@users.sourceforge.net>
+dnl Thomas Vander Stichele <thomas@apestaart.org>
+
+dnl $Id: as-modtool.m4,v 1.12 2004/06/03 15:20:11 thomasvs Exp $
+
+dnl AS_LINUX_MODTOOL()
+dnl
+dnl this macro defines:
+dnl moduledir
+dnl modulePROGRAMS_INSTALL
+dnl modulePROGRAMS_UNINSTALL
+dnl
+dnl End of search list.
+
+dnl
+dnl FIXME:
+dnl  How do you specify that the building of modtool should go to the
+dnl  end of the configure script?
+dnl
+
+dnl SYMVERS_INCLUDES can be used to add additional .symvers files to the
+dnl modpost step
+
+AC_DEFUN([AS_LINUX_MODTOOL],
+[
+	AC_PATH_PROG(STRIP, strip)
+	AC_PATH_PROG([DEPMOD], [depmod], [no], [$PATH:/sbin:/usr/sbin:/usr/local/sbin])
+	AC_PATH_PROG([GENKSYMS], [genksyms], [no], [$PATH:/sbin:/usr/sbin:/usr/local/sbin])
+
+	if test "x$LINUX_SMP" = "xyes"
+	then
+		GENKSYMS="$GENKSYMS -p smp_"
+	fi
+	dnl this can be overridden in Makefile.am
+	dnl FIXME: it'd be nice if we could specify different target_PROGRAMS
+	dnl and different targetdir
+	moduledir="\$(modulesdir)/\$(PACKAGE)"
+	modulePROGRAMS_INSTALL="\$(top_builddir)/modtool --install"
+	modulePROGRAMS_UNINSTALL="\$(top_builddir)/modtool --uninstall"
+	AC_SUBST(moduledir)
+	AC_SUBST(modulePROGRAMS_INSTALL)
+
+	LINUX_VERSION=`echo $LINUX_KERNELRELEASE | cut -d- -f1`
+
+	AC_MSG_NOTICE(creating modtool)
+	cat >modtool <<EOF
+#!/bin/sh
+
+set -e
+
+LINUX_LD="$LINUX_LD"
+LINUX_MODPOST="$LINUX_MODPOST"
+LINUX_VERSION="$LINUX_VERSION"
+GENKSYMS="$GENKSYMS"
+CC="$LINUX_CC"
+INSTALL="$INSTALL"
+LINUX_MODULE_EXT="$LINUX_MODULE_EXT"
+STRIP="$STRIP"
+CFLAGS="$CFLAGS $LINUX_CFLAGS"
+LINUX_DIR="$LINUX_DIR"
+
+mode=\$[1]
+shift
+
+case \$mode in
+--link)
+	# we accept -i (symvers) and -o (target) as options
+	# at least -o (target) needs to be specified
+	SYMVERS_INCLUDES=""
+	done=false
+	while test ! -z "\$[0]" -a "\$done" = "false"
+	do
+		case \$[1] in
+		-i)
+                        SYMVERS_INCLUDES="\$SYMVERS_INCLUDES \$[2]"
+                        shift 2
+                        ;;
+                -o)
+                        target=\$(echo \$[2] | sed s/.ko$//)
+                        shift 2
+                        ;;
+                *)
+                        done=true
+                        ;;
+                esac
+        done
+
+	mkdir -p .mods
+	if test "\$LINUX_MODULE_EXT" = .ko ; then
+
+		\$LINUX_LD -r -o .mods/\$target.o \$[*]
+
+		cat \$LINUX_DIR/Module.symvers \$SYMVERS_INCLUDES >.mods/symvers.tmp
+
+		\$LINUX_MODPOST -o .mods/\$target.o.symvers.tmp -i .mods/symvers.tmp .mods/\$target.o
+
+		grep .mods/\$target .mods/\$target.o.symvers.tmp >.mods/\$target.o.symvers || true
+
+		rm -f .mods/\$target.o.symvers.tmp .mods/symvers.tmp
+		
+		\$CC \$CFLAGS -DKBUILD_MODNAME=\$target -c -o .mods/\$target.mod.o .mods/\$target.mod.c
+
+		\$LINUX_LD -r -o \$target.ko .mods/\$target.mod.o .mods/\$target.o
+		set +x
+	else
+		echo \$LINUX_LD -r -o \$target.ko \$[*]
+		\$LINUX_LD -r -o \$target.ko \$[*]
+                                                                      
+		if test "x\$SOURCES" != "x"
+		then
+			echo "\$CC \$CFLAGS -E -D__GENKSYMS__ \$SOURCES | \$GENKSYMS -k \$LINUX_VERSION > .mods/\$target.ver"
+			\$CC \$CFLAGS -E -D__GENKSYMS__ \$SOURCES | \$GENKSYMS -k \$LINUX_VERSION > .mods/\$target.ver
+		fi
+
+	fi
+
+	;;
+--install)
+	module_src=\$[1]
+	module_dest=\`echo \$[2] | sed "s/\.ko$/\${LINUX_MODULE_EXT}/"\`
+	echo \$INSTALL -m644 "\$module_src" "\$module_dest"
+	\$INSTALL -m644 "\$module_src" "\$module_dest"
+	\$STRIP -g "\$module_dest"
+	;;
+--uninstall)
+	module_src=\$[1]
+	module_dest=\`echo \$[2] | sed "s/\.ko$/\${LINUX_MODULE_EXT}/"\`
+	echo uninstall "\$module_src" "\$module_dest"
+	rm -f "\$module_dest"
+	;;
+*)
+	echo Unknown mode \$mode >&2
+	exit 1
+esac
+
+EOF
+	chmod +x modtool
+
+
+])
+
+
Index: kernel-module-pwcx/pwcx-9.0-beta-2/2.6.4/Makefile.am
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/2.6.4/Makefile.am	2004-05-24 11:08:17.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/2.6.4/Makefile.am	2004-05-24 11:19:15.000000000 +0200
@@ -0,0 +1,20 @@
+moduledir = $(modulesdir)/kernel/drivers/usb/media
+module_PROGRAMS = pwc.ko
+                                                                                
+pwc_ko_SOURCES = \
+        pwc-if.c pwc-misc.c pwc-ctrl.c pwc-uncompress.c
+pwc_ko_CFLAGS = $(LINUX_CFLAGS)
+pwc_ko_LINK = $(top_builddir)/modtool --link -o $@
+
+noinst_HEADERS = \
+	pwc.h \
+	pwc-ioctl.h \
+	pwc_kiara.h \
+	pwc_nala.h \
+	pwc_timon.h \
+	pwc-uncompress.h
+
+distclean-local:
+	-rm -rf .mods
+
+EXTRA_DIST = ChangeLog philips.txt
Index: kernel-module-pwcx/pwcx-9.0-beta-2/pwcx/Makefile.am
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/pwcx/Makefile.am	2004-05-24 11:17:28.000000000 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/pwcx/Makefile.am	2004-06-04 17:16:25.895755952 +0200
@@ -0,0 +1,25 @@
+moduledir = $(modulesdir)/kernel/drivers/usb/media
+module_PROGRAMS = pwcx.ko
+                                                                                
+if POST_2_6
+inc = -I$(top_srcdir)/2.6.4
+SYMVERSFLAGS = -i $(top_builddir)/2.6.4/.mods/pwc.o.symvers
+VERCFLAGS =
+else
+inc = -I$(top_srcdir)/2.4.25
+SYMVERSFLAGS =
+VERCFLAGS = -include $(top_builddir)/2.4.25/.mods/pwc.ver
+endif
+
+pwcx_ko_SOURCES = pwcx-glue.c
+pwcx_ko_CFLAGS = $(LINUX_CFLAGS) $(inc) $(VERCFLAGS) -DCONFIG_USB_PWCX_MODULE
+# LDFLAGS is not the one to use, because the .a has to be *at the end*
+# of the compile line
+pwcx_ko_LDADD =  $(top_srcdir)/x86/libpwcx.a
+
+pwcx_ko_LINK = $(top_builddir)/modtool --link $(SYMVERSFLAGS) -o $@
+
+noinst_HEADERS = pwcx.h
+
+distclean-local:
+	-rm -rf .mods
Index: kernel-module-pwcx/pwcx-9.0-beta-2/2.4.25/Makefile.am
--- kernel-module-pwcx~autotools.9.0-beta-2/pwcx-9.0-beta-2/2.4.25/Makefile.am	2004-06-04 16:51:15.694341464 +0200
+++ kernel-module-pwcx/pwcx-9.0-beta-2/2.4.25/Makefile.am	2004-06-04 17:12:25.145355576 +0200
@@ -0,0 +1,22 @@
+moduledir = $(modulesdir)/kernel/drivers/usb/media
+module_PROGRAMS = pwc.ko
+                                                                                
+pwc_ko_SOURCES = \
+        pwc-if.c pwc-misc.c pwc-ctrl.c pwc-uncompress.c
+# -DEXPORT_SYMTAB is for pwc-uncompress.c which uses EXPORT_SYMBOL*
+pwc_ko_CFLAGS = $(LINUX_CFLAGS) -DEXPORT_SYMTAB
+# the SOURCES= makes sure we get a pwc.ver file
+pwc_ko_LINK = SOURCES=pwc-uncompress.c $(top_builddir)/modtool --link -o $@
+
+noinst_HEADERS = \
+	pwc.h \
+	pwc-ioctl.h \
+	pwc_kiara.h \
+	pwc_nala.h \
+	pwc_timon.h \
+	pwc-uncompress.h
+
+distclean-local:
+	-rm -rf .mods
+
+EXTRA_DIST = ChangeLog philips.txt
