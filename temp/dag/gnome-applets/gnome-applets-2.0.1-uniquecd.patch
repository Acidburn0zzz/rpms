--- gnome-applets-2.0.1/cdplayer/cdplayer.c.uniquecd	Sun Jul 21 11:23:44 2002
+++ gnome-applets-2.0.1/cdplayer/cdplayer.c	Tue Aug 27 17:00:42 2002
@@ -138,6 +138,7 @@
     gnome_window_icon_set_default_from_file (GNOME_ICONDIR"/gnome-cdplayer-icon.png");
     
     cd = g_new0(CDPlayerData, 1);
+    
     cd->panel.applet = GTK_WIDGET (applet);
     
     /* the rest of the widgets go in here */
@@ -172,7 +173,7 @@
     /* panel_applet_add_preferences (applet, "/schemas/apps/cdplayer-applet/prefs", NULL); */
     cdplayer_load_config(cd);
 
-    cd->cdrom_device = cdrom_open(cd->devpath, &err);
+    cd_try_open (cd);
     cd->orient = panel_applet_get_orient (PANEL_APPLET (applet));
     cd->size = panel_applet_get_size (PANEL_APPLET (applet));
 
@@ -312,6 +313,7 @@
     newpath = gtk_editable_get_chars (GTK_EDITABLE (entry), 0, -1);
     if(newpath && strlen(newpath) > 2 && strcmp(cd->devpath, newpath))
             {
+		g_print ("%p\n", cd->cd_selection);
                 cd_close(cd);
                 cd->devpath = g_strdup(newpath);
                 if (!cd_try_open(cd)) {
@@ -700,7 +702,12 @@
     int err;
     if(cd->cdrom_device == NULL) {
         cd->cdrom_device = cdrom_open(cd->devpath, &err);
-        return cd->cdrom_device != NULL;
+	if (cd->cdrom_device != NULL) {
+		cd->cd_selection = cd_selection_start (cd->devpath);
+		return TRUE;
+	} else {
+		return FALSE;
+	}
     }
     return TRUE;
 }
@@ -709,6 +716,8 @@
 cd_close (CDPlayerData *cd)
 {
     if (cd->cdrom_device != NULL) {
+	cd_selection_stop (cd->cd_selection);
+	cd->cd_selection = NULL;
         cdrom_close(cd->cdrom_device);
         cd->cdrom_device = NULL;
     }
--- gnome-applets-2.0.1/cdplayer/cd-selection.c.uniquecd	Tue Aug 27 16:19:58 2002
+++ gnome-applets-2.0.1/cdplayer/cd-selection.c	Tue Aug 27 17:04:56 2002
@@ -0,0 +1,221 @@
+/*
+ * Copyright © 2002 Red Hat, Inc.
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of Red Hat not be used in advertising or
+ * publicity pertaining to distribution of the software without specific,
+ * written prior permission.  Red Hat makes no representations about the
+ * suitability of this software for any purpose.  It is provided "as is"
+ * without express or implied warranty.
+ *
+ * RED HAT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL RED HAT
+ * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
+ * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
+ * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Author:  Owen Taylor, Red Hat, Inc.
+ */
+
+/* This file implements an X protocol for synchronizing multiple
+ * CD player applications. The convention is that there is one CD
+ * player application that is the "Master", which is identifies
+ * by owning the _REDHAT_CD_PLAYER:<hostname>:<device> selection.
+ * When a player reliquishes the "Master" role, it destroys the
+ * owner window of the selection.
+ */
+#include <string.h>
+#include <unistd.h>		/* For gethostname() */
+
+#include <gtk/gtk.h>
+#include <gdk/gdkx.h>
+
+#include "cd-selection.h"
+
+struct _CDSelection
+{
+  GdkAtom selection_atom;
+  GdkWindow *owner_window;
+  GtkWidget *invisible;
+};
+
+#define SELECTION_NAME "_REDHAT_CD_PLAYER"
+
+static GdkFilterReturn cd_selection_filter     (GdkXEvent   *xevent,
+					        GdkEvent    *event,
+					        gpointer     data);
+static void            cd_selection_negotiate  (CDSelection *cd_selection);
+
+static void
+cd_selection_reset (CDSelection *cd_selection)
+{
+  if (cd_selection->owner_window)
+    {
+      gdk_window_remove_filter (cd_selection->owner_window,
+				cd_selection_filter, cd_selection);
+      gdk_window_unref (cd_selection->owner_window);
+      cd_selection->owner_window = NULL;
+    }
+
+  if (cd_selection->invisible)
+    {
+      gtk_widget_destroy (cd_selection->invisible);
+      cd_selection->invisible = NULL;
+    }
+}
+
+static void
+cd_selection_clear (GtkWidget         *widget,
+		    GdkEventSelection *event,
+		    gpointer           user_data)
+{
+  CDSelection *cd_selection = user_data;
+
+  cd_selection_reset (cd_selection);
+  cd_selection_negotiate (cd_selection);
+}
+
+static gboolean
+cd_selection_find_existing (CDSelection *cd_selection)
+{
+  Display *xdisplay = GDK_DISPLAY ();
+  Window old;
+
+  gdk_error_trap_push ();
+  old = XGetSelectionOwner (xdisplay,
+			    gdk_x11_atom_to_xatom (cd_selection->selection_atom));
+  if (old)
+    {
+      XSelectInput (xdisplay, old, StructureNotifyMask);
+      cd_selection->owner_window = gdk_window_foreign_new (old);
+    }
+  XSync (xdisplay, False);
+  
+  if (gdk_error_trap_pop () == 0 && cd_selection->owner_window)
+    {
+      gdk_window_add_filter (cd_selection->owner_window,
+			     cd_selection_filter, cd_selection);
+
+      return TRUE;
+    }
+  else
+    {
+      if (cd_selection->owner_window)
+	{
+	  gdk_window_unref (cd_selection->owner_window);
+	  cd_selection->owner_window = NULL;
+	}
+
+      return FALSE;
+    }
+}
+
+static gboolean
+cd_selection_claim (CDSelection *cd_selection)
+{
+  cd_selection->invisible = gtk_invisible_new ();
+  g_signal_connect (cd_selection->invisible, "selection-clear-event",
+		    G_CALLBACK (cd_selection_clear), cd_selection);
+  
+  
+  if (gtk_selection_owner_set (cd_selection->invisible,
+			       cd_selection->selection_atom,
+			       GDK_CURRENT_TIME))
+    {
+      return TRUE;
+    }
+  else
+    {
+      cd_selection_reset (cd_selection);
+      return FALSE;
+    }
+}
+
+static void
+cd_selection_negotiate (CDSelection *cd_selection)
+{
+  Display *xdisplay = GDK_DISPLAY ();
+  gboolean found = FALSE;
+
+  /* We don't need both the XGrabServer() and the loop here;
+   * the XGrabServer() should make sure that we only go through
+   * the loop once. It also works if you remove the XGrabServer()
+   * and just have the loop, but then the selection ownership
+   * can get transfered a bunch of times before things
+   * settle down.
+   */
+  while (!found)
+    {
+      XGrabServer (xdisplay);
+
+      if (cd_selection_find_existing (cd_selection))
+	found = TRUE;
+      else if (cd_selection_claim (cd_selection))
+	found = TRUE;
+
+      XUngrabServer (xdisplay);
+      gdk_flush ();
+    }
+}
+
+static GdkFilterReturn
+cd_selection_filter (GdkXEvent *xevent,
+		     GdkEvent  *event,
+		     gpointer   data)
+{
+  CDSelection *cd_selection = data;
+  XEvent *xev = (XEvent *)xevent;
+
+  if (xev->xany.type == DestroyNotify &&
+      xev->xdestroywindow.window == xev->xdestroywindow.event)
+    {
+      cd_selection_reset (cd_selection);
+      cd_selection_negotiate (cd_selection);
+
+      return GDK_FILTER_REMOVE;
+    }
+
+  return GDK_FILTER_CONTINUE;
+}
+
+CDSelection *
+cd_selection_start (const char *device)
+{
+  CDSelection *cd_selection = g_new (CDSelection, 1);
+  gchar *selection_name;
+  
+  char hostname[256];
+
+  memset (hostname, 0, 256);
+  gethostname (hostname, 256);
+  hostname[255] = 0;
+
+  selection_name = g_strdup_printf (SELECTION_NAME ":%s:%s",
+				    hostname, device);
+  cd_selection->selection_atom = gdk_atom_intern (selection_name, FALSE);
+  g_free (selection_name);
+  
+  cd_selection->owner_window = NULL;
+  cd_selection->invisible = NULL;
+
+  cd_selection_negotiate (cd_selection);
+
+  return cd_selection;
+}
+
+void
+cd_selection_stop (CDSelection *cd_selection)
+{
+  cd_selection_reset (cd_selection);
+  g_free (cd_selection);
+}
+
+gboolean
+cd_selection_is_master (CDSelection *cd_selection)
+{
+  return cd_selection->invisible != NULL;
+}
--- gnome-applets-2.0.1/cdplayer/cd-selection.h.uniquecd	Tue Aug 27 16:19:58 2002
+++ gnome-applets-2.0.1/cdplayer/cd-selection.h	Tue Aug 27 16:19:58 2002
@@ -0,0 +1,33 @@
+/*
+ * Copyright © 2002 Red Hat, Inc.
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of Red Hat not be used in advertising or
+ * publicity pertaining to distribution of the software without specific,
+ * written prior permission.  Red Hat makes no representations about the
+ * suitability of this software for any purpose.  It is provided "as is"
+ * without express or implied warranty.
+ *
+ * RED HAT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL RED HAT
+ * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
+ * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
+ * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Author:  Owen Taylor, Red Hat, Inc.
+ */
+
+#ifndef __CD_SELECTION_H__
+#define __CD_SELECTION_H__
+
+typedef struct _CDSelection  CDSelection;
+
+CDSelection *cd_selection_start     (const char *device);
+void         cd_selection_stop      (CDSelection *cd_selection);
+gboolean     cd_selection_is_master (CDSelection *cd_selection);
+
+#endif /* __CD_SELECTION_H__ */
--- gnome-applets-2.0.1/cdplayer/cdplayer.h.uniquecd	Sun Jul 21 11:23:44 2002
+++ gnome-applets-2.0.1/cdplayer/cdplayer.h	Tue Aug 27 16:19:58 2002
@@ -23,6 +23,7 @@
 #include <gtk/gtk.h>
 #include <panel-applet.h>
 #include "cdrom-interface.h"
+#include "cd-selection.h"
 
 #ifndef __CDPLAYER_H__
 #define __CDPLAYER_H__
@@ -33,6 +34,7 @@
 {
     int timeout;
     cdrom_device_t cdrom_device;
+    CDSelection *cd_selection;
     int size;
     PanelAppletOrient orient;
     char *devpath;
--- gnome-applets-2.0.1/cdplayer/Makefile.am.uniquecd	Sun Jul 21 11:23:44 2002
+++ gnome-applets-2.0.1/cdplayer/Makefile.am	Tue Aug 27 16:19:58 2002
@@ -21,6 +21,8 @@
 cdplayer.c \
 cdplayer.h \
 cdrom-interface.h \
+cd-selection.c \
+cd-selection.h \
 led.c \
 led.h \
 reader-solaris.h \
