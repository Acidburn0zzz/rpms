--- linux/net/ipsec/ipsec_rcv.c.orig	2004-02-18 03:27:09.000000000 +0100
+++ linux/net/ipsec/ipsec_rcv.c	2004-02-18 03:30:39.000000000 +0100
@@ -592,6 +592,7 @@
 				    || ipsnext->ips_inext)
 #endif /* CONFIG_IPSEC_IPCOMP */
 				&& ipp->protocol != IPPROTO_IPIP
+				&& ipp->protocol != 0xFE
 				) {
 				KLIPS_PRINT(debug_rcv,
 					    "klips_debug:ipsec_rcv: "
@@ -948,7 +949,8 @@
 		irs.said = ipsnext->ips_said;
 		irs.sa_len = satot(&irs.said, 0, irs.sa, sizeof(irs.sa));
 
-		if(ipp->protocol != IPPROTO_IPIP) {
+		if((ipp->protocol != IPPROTO_IPIP) &&
+			(ipp->protocol != 0xFE)) {
 			spin_unlock(&tdb_lock);
 			KLIPS_PRINT(debug_rcv,
 				    "klips_debug:ipsec_rcv: "
@@ -989,6 +991,8 @@
 			}
 		}
 
+	if(ipp->protocol == IPPROTO_IPIP) {
+
 		/*
 		 * XXX this needs to be locked from when it was first looked
 		 * up in the decapsulation loop.  Perhaps it is better to put
@@ -1036,6 +1040,8 @@
 			    "IPIP tunnel stripped.\n");
 		KLIPS_IP_PRINT(debug_rcv & DB_RX_PKTRX, ipp);
 
+	}
+
 		if(sysctl_ipsec_inbound_policy_check
 		   /*
 		      Note: "xor" (^) logically replaces "not equal"
